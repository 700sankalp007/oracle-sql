CREATE TABLE customer( 
customer_id         NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_CUSTOMER_CUSTOMERID PRIMARY KEY, 
customer_number     NUMBER CONSTRAINT CUSTOMER_CUSTOMER_ID_NOTNULL NOT NULL, 
customer_name       VARCHAR2(30) CONSTRAINT CUSTOMER_CUSTOMER_NAME_NOTNULL NOT NULL, 
contact_number      NUMBER(10), 
customer_dob        DATE, 
customer_address    VARCHAR2(50));

CREATE TABLE product(
product_id          NUMBER GENERATED ALWAYS AS IDENTITY CONSTRAINT PK_PRODUCT_PRODUCT_ID PRIMARY KEY,
product_number      NUMBER CONSTRAINT PRODUCT_PRODUCT_NUMBER_NOTNULL NOT NULL,
product_name        VARCHAR2(20) CONSTRAINT PRODUCT_PRODUCT_NAME_NOTNULL NOT NULL,
product_discription VARCHAR(50),
product_price       NUMBER);

CREATE TABLE purchase(
purchase_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY START WITH 1 CONSTRAINT PK_PURCHASE_PURCHASE_ID PRIMARY KEY,
purchase_number NUMBER,
customer_id NUMBER CONSTRAINT FK_PURCHASE_CUSTOMER_ID REFERENCES customer(customer_id),
product_id NUMBER CONSTRAINT FK_PURCHASE_PRODUCT_ID REFERENCES product(product_id));

INSERT INTO customer(customer_number,customer_name,contact_number,customer_dob,customer_address) 
VALUES(1234,'sankalp',9755066,to_date('27-06-2022','dd-mm-yyyy'),'goa');
INSERT INTO customer(customer_number,customer_name,contact_number,customer_dob,customer_address) 
VALUES(1235,'aniket',9755066,to_date('27-06-2021','dd-mm-yyyy'),'pune');
INSERT INTO customer(customer_number,customer_name,contact_number,customer_dob,customer_address) 
VALUES(1236,'king',9755066,to_date('27-06-1999','dd-mm-yyyy'),'bhopal');
INSERT INTO customer(customer_number,customer_name,contact_number,customer_dob,customer_address) 
VALUES(1237,'jason',9755066,to_date('27-06-1999','dd-mm-yyyy'),'bhopal');
INSERT INTO customer(customer_number,customer_name,contact_number,customer_dob,customer_address) 
VALUES(1238,'scott',9755066,to_date('27-06-1999','dd-mm-yyyy'),'bhopal');
INSERT INTO customer(customer_number,customer_name,contact_number,customer_dob,customer_address) 
VALUES(1239,'blake',9755066,to_date('27-06-1999','dd-mm-yyyy'),'bhopal');


INSERT INTO product(product_number,product_name ,product_discription,product_price) 
VALUES(222,'asus','laptop',1000000);
INSERT INTO product(product_number,product_name ,product_discription,product_price) 
VALUES(333,'apple','iphone',99999);
INSERT INTO product(product_number,product_name ,product_discription,product_price) 
VALUES(444,'note 5 pro','MI',3000);
INSERT INTO product(product_number,product_name ,product_discription,product_price) 
VALUES(555,'note 6 pro','MI',3000);
INSERT INTO product(product_number,product_name ,product_discription,product_price) 
VALUES(666,'mi_charger','MI',700);
INSERT INTO product(product_number,product_name ,product_discription,product_price) 
VALUES(777,'boat immortal 700','headphones',2500);
INSERT INTO product(product_number,product_name ,product_discription,product_price) 
VALUES(111,'abcdef',null,2500);
INSERT INTO product(product_number,product_name ,product_discription,product_price) 
VALUES(999,'abrlsdi',null,20);

INSERT INTO purchase(purchase_number,customer_id,product_id) 
VALUES(10,1,1);
INSERT INTO purchase(purchase_number,customer_id,product_id) 
VALUES(20,1,2);
INSERT INTO purchase(purchase_number,customer_id,product_id) 
VALUES(30,2,2);
INSERT INTO purchase(purchase_number,customer_id,product_id) 
VALUES(40,6,3);

--####################################################################

SELECT * FROM customer;
SELECT * FROM product;
SELECT * FROM purchase;

--###############################################################
--1)Select distinct customers from the table
SELECT DISTINCT customer_name
FROM customer;

--2)List the customer with the product which they bought
--customer name - product name
SELECT customer_name,product_name
FROM purchase INNER JOIN customer 
USING(customer_id)
INNER JOIN product 
USING(product_id);

--3)List the customers with the total Amount which they have to pay at billing counter(sort the data in Ascending order of Billing Amount)

SELECT customer_id,customer_name,sum(product_price) as total_bill
FROM purchase INNER JOIN customer 
USING(customer_id)
INNER JOIN product 
USING(product_id)
GROUP BY customer_id,customer_name
ORDER BY total_bill ;

--4)List the customers whose age is more than 18 years.
SELECT customer_id,customer_name,customer_number
FROM customer
WHERE round(months_between(SYSDATE,customer_dob)/12)>18;

--5)List the customers who has not bought any product from the store.
SELECT *
FROM customer
WHERE
customer_id IN(
    SELECT customer_id
    FROM customer 
    MINUS
    SELECT customer_id
    FROM purchase);
    
--6)Find the customers whose billing amount is between 2000 to 5000.
SELECT customer_id,customer_name,sum(product_price) as total_bill
FROM purchase INNER JOIN customer 
USING(customer_id)
INNER JOIN product 
USING(product_id)
GROUP BY customer_id,customer_name
HAVING sum(product_price) BETWEEN 2000 AND 3000;

--7)List the products which are not purchased by anyone.

SELECT *
FROM product
WHERE 
product_id IN(
    SELECT product_id
    FROM product
    MINUS
    SELECT product_id
    FROM purchase);
    
 --8)List the products, increased their price by 25%  
 
 SELECT product_id,product_name,product_price*0.25
 FROM product;
 ----------------------------------------------------------------
 UPDATE product
 SET product_price=product_price*0.25;
 
 --9)find those products whose name start with 'A' and six characters in length.
 
 SELECT product_name
 FROM product
 WHERE product_name LIKE 'a_____';

--10)find those customers whose name ends with 'I' and third character must be 'R'. 

SELECT *
FROM customer
WHERE customer_name LIKE '__r%i';

--11)Perform join on 3 tables and display all the columns
SELECT *
FROM purchase INNER JOIN customer 
USING(customer_id)
INNER JOIN product 
USING(product_id);
--###########################################################################################

DROP TABLE customer CASCADE CONSTRAINT;
DROP TABLE product CASCADE CONSTRAINT;
DROP TABLE purchase CASCADE CONSTRAINT;

 
